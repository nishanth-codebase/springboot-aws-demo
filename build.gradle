plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco'
    id 'org.sonarqube' version '4.3.1.3277'
}

group = 'com.pc.sss.milkprocurement'
version = '0.0.1-SNAPSHOT'
description = 'service to manage farmer registration'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
jacoco {
    toolVersion = "0.8.10" // Latest stable version
}
jacocoTestReport {
    dependsOn test // Tests must run before generating the report

    reports {
        xml.required = true
        csv.required = false
        html.required = true
        html.outputLocation = layout.buildDirectory.dir('reports/jacoco/html')
    }
    //Exclude specific files or packages
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    '**/config/**',                         // Exclude config package
                    '**/modal/**',                          // Exclude DTOs
                    '**/repository/**',                     // Exclude repos classes
                    '**/FarmerServiceApplication.class'     // Exclude main class
            ])
        }))
    }
}
jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'

            excludes = [
                    '**/config/**',                         // Exclude config package
                    '**/modal/**',                          // Exclude DTOs
                    '**/repository/**',                     // Exclude repos classes
                    '**/FarmerServiceApplication.class'     // Exclude main class
            ]

            limit {
                minimum = 0.85 // Minimum coverage threshold (85%)
            }
        }
    }
}

